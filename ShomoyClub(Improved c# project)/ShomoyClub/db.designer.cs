#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ShomoyClub
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="ShomoyClub")]
	public partial class dbDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void Insertadmin(admin instance);
    partial void Updateadmin(admin instance);
    partial void Deleteadmin(admin instance);
    partial void Insertregistration(registration instance);
    partial void Updateregistration(registration instance);
    partial void Deleteregistration(registration instance);
    partial void Insertdonwithtable(donwithtable instance);
    partial void Updatedonwithtable(donwithtable instance);
    partial void Deletedonwithtable(donwithtable instance);
    #endregion
		
		public dbDataContext() : 
				base(global::ShomoyClub.Properties.Settings.Default.ShomoyClubConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public dbDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<admin> admins
		{
			get
			{
				return this.GetTable<admin>();
			}
		}
		
		public System.Data.Linq.Table<registration> registrations
		{
			get
			{
				return this.GetTable<registration>();
			}
		}
		
		public System.Data.Linq.Table<donwithtable> donwithtables
		{
			get
			{
				return this.GetTable<donwithtable>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.admin")]
	public partial class admin : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _admin_name;
		
		private string _t_department;
		
		private string _t_id;
		
		private string _password;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Onadmin_nameChanging(string value);
    partial void Onadmin_nameChanged();
    partial void Ont_departmentChanging(string value);
    partial void Ont_departmentChanged();
    partial void Ont_idChanging(string value);
    partial void Ont_idChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    #endregion
		
		public admin()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_admin_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string admin_name
		{
			get
			{
				return this._admin_name;
			}
			set
			{
				if ((this._admin_name != value))
				{
					this.Onadmin_nameChanging(value);
					this.SendPropertyChanging();
					this._admin_name = value;
					this.SendPropertyChanged("admin_name");
					this.Onadmin_nameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_department", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string t_department
		{
			get
			{
				return this._t_department;
			}
			set
			{
				if ((this._t_department != value))
				{
					this.Ont_departmentChanging(value);
					this.SendPropertyChanging();
					this._t_department = value;
					this.SendPropertyChanged("t_department");
					this.Ont_departmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_t_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string t_id
		{
			get
			{
				return this._t_id;
			}
			set
			{
				if ((this._t_id != value))
				{
					this.Ont_idChanging(value);
					this.SendPropertyChanging();
					this._t_id = value;
					this.SendPropertyChanged("t_id");
					this.Ont_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.registration")]
	public partial class registration : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _name;
		
		private string _student_id;
		
		private string _department;
		
		private int _age;
		
		private string _mail_address;
		
		private string _blood_group;
		
		private string _phone_number;
		
		private string _password;
		
		private string _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void Onstudent_idChanging(string value);
    partial void Onstudent_idChanged();
    partial void OndepartmentChanging(string value);
    partial void OndepartmentChanged();
    partial void OnageChanging(int value);
    partial void OnageChanged();
    partial void Onmail_addressChanging(string value);
    partial void Onmail_addressChanged();
    partial void Onblood_groupChanging(string value);
    partial void Onblood_groupChanged();
    partial void Onphone_numberChanging(string value);
    partial void Onphone_numberChanged();
    partial void OnpasswordChanging(string value);
    partial void OnpasswordChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public registration()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_student_id", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string student_id
		{
			get
			{
				return this._student_id;
			}
			set
			{
				if ((this._student_id != value))
				{
					this.Onstudent_idChanging(value);
					this.SendPropertyChanging();
					this._student_id = value;
					this.SendPropertyChanged("student_id");
					this.Onstudent_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_department", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string department
		{
			get
			{
				return this._department;
			}
			set
			{
				if ((this._department != value))
				{
					this.OndepartmentChanging(value);
					this.SendPropertyChanging();
					this._department = value;
					this.SendPropertyChanged("department");
					this.OndepartmentChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="Int NOT NULL")]
		public int age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mail_address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string mail_address
		{
			get
			{
				return this._mail_address;
			}
			set
			{
				if ((this._mail_address != value))
				{
					this.Onmail_addressChanging(value);
					this.SendPropertyChanging();
					this._mail_address = value;
					this.SendPropertyChanged("mail_address");
					this.Onmail_addressChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_blood_group", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string blood_group
		{
			get
			{
				return this._blood_group;
			}
			set
			{
				if ((this._blood_group != value))
				{
					this.Onblood_groupChanging(value);
					this.SendPropertyChanging();
					this._blood_group = value;
					this.SendPropertyChanged("blood_group");
					this.Onblood_groupChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_phone_number", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string phone_number
		{
			get
			{
				return this._phone_number;
			}
			set
			{
				if ((this._phone_number != value))
				{
					this.Onphone_numberChanging(value);
					this.SendPropertyChanging();
					this._phone_number = value;
					this.SendPropertyChanged("phone_number");
					this.Onphone_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this.OnpasswordChanging(value);
					this.SendPropertyChanging();
					this._password = value;
					this.SendPropertyChanged("password");
					this.OnpasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.donwithtable")]
	public partial class donwithtable : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _transaction_id;
		
		private string _donor_id;
		
		private string _donation_amount;
		
		private string _donation_date;
		
		private string _donation_details;
		
		private string _withdrawer_id;
		
		private string _withdrawal_amount;
		
		private string _withdrawal_date;
		
		private string _withdrawal_details;
		
		private string _status;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void Ontransaction_idChanging(int value);
    partial void Ontransaction_idChanged();
    partial void Ondonor_idChanging(string value);
    partial void Ondonor_idChanged();
    partial void Ondonation_amountChanging(string value);
    partial void Ondonation_amountChanged();
    partial void Ondonation_dateChanging(string value);
    partial void Ondonation_dateChanged();
    partial void Ondonation_detailsChanging(string value);
    partial void Ondonation_detailsChanged();
    partial void Onwithdrawer_idChanging(string value);
    partial void Onwithdrawer_idChanged();
    partial void Onwithdrawal_amountChanging(string value);
    partial void Onwithdrawal_amountChanged();
    partial void Onwithdrawal_dateChanging(string value);
    partial void Onwithdrawal_dateChanged();
    partial void Onwithdrawal_detailsChanging(string value);
    partial void Onwithdrawal_detailsChanged();
    partial void OnstatusChanging(string value);
    partial void OnstatusChanged();
    #endregion
		
		public donwithtable()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_transaction_id", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int transaction_id
		{
			get
			{
				return this._transaction_id;
			}
			set
			{
				if ((this._transaction_id != value))
				{
					this.Ontransaction_idChanging(value);
					this.SendPropertyChanging();
					this._transaction_id = value;
					this.SendPropertyChanged("transaction_id");
					this.Ontransaction_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donor_id", DbType="VarChar(50)")]
		public string donor_id
		{
			get
			{
				return this._donor_id;
			}
			set
			{
				if ((this._donor_id != value))
				{
					this.Ondonor_idChanging(value);
					this.SendPropertyChanging();
					this._donor_id = value;
					this.SendPropertyChanged("donor_id");
					this.Ondonor_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donation_amount", DbType="VarChar(50)")]
		public string donation_amount
		{
			get
			{
				return this._donation_amount;
			}
			set
			{
				if ((this._donation_amount != value))
				{
					this.Ondonation_amountChanging(value);
					this.SendPropertyChanging();
					this._donation_amount = value;
					this.SendPropertyChanged("donation_amount");
					this.Ondonation_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donation_date", DbType="VarChar(50)")]
		public string donation_date
		{
			get
			{
				return this._donation_date;
			}
			set
			{
				if ((this._donation_date != value))
				{
					this.Ondonation_dateChanging(value);
					this.SendPropertyChanging();
					this._donation_date = value;
					this.SendPropertyChanged("donation_date");
					this.Ondonation_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_donation_details", DbType="VarChar(200)")]
		public string donation_details
		{
			get
			{
				return this._donation_details;
			}
			set
			{
				if ((this._donation_details != value))
				{
					this.Ondonation_detailsChanging(value);
					this.SendPropertyChanging();
					this._donation_details = value;
					this.SendPropertyChanged("donation_details");
					this.Ondonation_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdrawer_id", DbType="VarChar(50)")]
		public string withdrawer_id
		{
			get
			{
				return this._withdrawer_id;
			}
			set
			{
				if ((this._withdrawer_id != value))
				{
					this.Onwithdrawer_idChanging(value);
					this.SendPropertyChanging();
					this._withdrawer_id = value;
					this.SendPropertyChanged("withdrawer_id");
					this.Onwithdrawer_idChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdrawal_amount", DbType="VarChar(50)")]
		public string withdrawal_amount
		{
			get
			{
				return this._withdrawal_amount;
			}
			set
			{
				if ((this._withdrawal_amount != value))
				{
					this.Onwithdrawal_amountChanging(value);
					this.SendPropertyChanging();
					this._withdrawal_amount = value;
					this.SendPropertyChanged("withdrawal_amount");
					this.Onwithdrawal_amountChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdrawal_date", DbType="VarChar(50)")]
		public string withdrawal_date
		{
			get
			{
				return this._withdrawal_date;
			}
			set
			{
				if ((this._withdrawal_date != value))
				{
					this.Onwithdrawal_dateChanging(value);
					this.SendPropertyChanging();
					this._withdrawal_date = value;
					this.SendPropertyChanged("withdrawal_date");
					this.Onwithdrawal_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_withdrawal_details", DbType="VarChar(200)")]
		public string withdrawal_details
		{
			get
			{
				return this._withdrawal_details;
			}
			set
			{
				if ((this._withdrawal_details != value))
				{
					this.Onwithdrawal_detailsChanging(value);
					this.SendPropertyChanging();
					this._withdrawal_details = value;
					this.SendPropertyChanged("withdrawal_details");
					this.Onwithdrawal_detailsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this.OnstatusChanging(value);
					this.SendPropertyChanging();
					this._status = value;
					this.SendPropertyChanged("status");
					this.OnstatusChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
